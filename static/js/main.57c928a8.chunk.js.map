{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","helpers/edit-number.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","helpers/getVisibleContacts.js","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","editNumber","string","slice","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","INITIAL_STATE","ContactForm","state","handleChange","e","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","contactForm","label","input","type","placeholder","pattern","title","required","onChange","addContactBtn","Component","connect","dispatch","contactsAction","contacts","filter","target","onDelete","contactItem","phoneNumber","contactDeleteBtn","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","items","contactsList","map","App","itemsReducer","createReducer","actions","item","toLocaleLowerCase","alert","filterReducer","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.57c928a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Z2II\",\"label\":\"Filter_label__yVS95\",\"input\":\"Filter_input__1A_bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__xWZC9\",\"contactItem\":\"ContactItem_contactItem__2fdaa\",\"contactDeleteBtn\":\"ContactItem_contactDeleteBtn__1S9H8\",\"ring\":\"ContactItem_ring__3xwRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__M3Pmm\"};","function editNumber(string) {\r\n  return (\r\n    string.slice(0, 3) + '-' + string.slice(3, 5) + '-' + string.slice(5, 7)\r\n  );\r\n}\r\n\r\nexport default editNumber;\r\n","//import types from './contacts-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport editNumber from '../../helpers/edit-number';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number: editNumber(number),\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filterContact = createAction('contacts/filter');\r\n\r\n// const addContact = ({ name, number }) => {\r\n//   return {\r\n//     type: types.ADD,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number: editNumber(number),\r\n//     },\r\n//   };\r\n// };\r\n\r\n// const deleteContact = id => {\r\n//   return {\r\n//     type: types.DELETE,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// const filterContact = value => {\r\n//   return {\r\n//     type: types.FILTER,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport default { addContact, deleteContact, filterContact };\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\nclass ContactForm extends Component {\n  static propTypes = {\n    INITIAL_STATE: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    onSubmit: PropTypes.func,\n  };\n  state = { ...INITIAL_STATE };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"input name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"XXX-XX-XX\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.addContactBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsAction.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsAction.filterContact(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactItem.module.scss';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li name={name} number={number} className={styles.contactItem}>\n    {name}:<span className={styles.phoneNumber}>{number}</span>\n    <button\n      type=\"button\"\n      className={styles.contactDeleteBtn}\n      onClick={() => onDelete(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsAction.deleteContact(id)),\n});\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","const getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\nexport default getVisibleContacts;\r\n","import styles from './ContactList.module.scss';\nimport ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getVisibleContacts from '../../helpers/getVisibleContacts';\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem key={id} id={id} name={name} number={number} />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport './styles.scss';\n\nconst App = () => (\n  <>\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  </>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n//import types from './contacts-types';\r\nimport actions from './contacts-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst itemsReducer = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) =>\r\n      state\r\n        .map(item => item.name.toLocaleLowerCase())\r\n        .includes(payload.name.toLocaleLowerCase())\r\n        ? alert(`${payload.name} is already in contacts.`)\r\n        : [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(contact => contact.id !== payload),\r\n  },\r\n);\r\n\r\n// const itemsReducer = (\r\n//   state = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//   ],\r\n//   { type, payload },\r\n// ) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","//import { createStore, combineReducers } from 'redux';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n//import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading=\"Loading...\" persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__blsyL\",\"label\":\"ContactForm_label__3d7tQ\",\"input\":\"ContactForm_input__29b0P\",\"addContactBtn\":\"ContactForm_addContactBtn__2F1n3\"};"],"sourceRoot":""}