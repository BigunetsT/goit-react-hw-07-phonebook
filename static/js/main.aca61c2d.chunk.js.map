{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","helpers/getVisibleContacts.js","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","itemsReducer","createReducer","state","payload","filter","contact","id","_","filterReducer","contactsReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","devTools","process","axios","defaults","baseURL","dispatch","a","get","data","name","number","map","item","toLowerCase","includes","alert","post","contactId","delete","INITIAL_STATE","ContactForm","handleChange","e","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","contactForm","label","input","type","placeholder","pattern","title","required","onChange","addContactBtn","Component","connect","contactsOperations","contactsAction","target","onDelete","contactItem","phoneNumber","contactDeleteBtn","onClick","getVisibleContacts","allContacts","normalizedFilter","contactsList","App","fetchContacts","contactsOprations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aca61c2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Z2II\",\"label\":\"Filter_label__yVS95\",\"input\":\"Filter_input__1A_bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__xWZC9\",\"contactItem\":\"ContactItem_contactItem__2fdaa\",\"contactDeleteBtn\":\"ContactItem_contactDeleteBtn__1S9H8\",\"ring\":\"ContactItem_ring__3xwRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__M3Pmm\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n// const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactRequest());\r\n//   axios\r\n//     .get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactError(error)));\r\n// };\r\n// const addContact =\r\n//   ({ name, number }) =>\r\n//   dispatch => {\r\n//     const contact = { name, number };\r\n//     dispatch(addContactRequest());\r\n//     axios\r\n//       .post('/contacts', contact)\r\n//       .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//       .catch(error => dispatch(addContactError(error)));\r\n//   };\r\n// const deleteContact = contactId => dispatch => {\r\n//   dispatch(deleteContactRequest());\r\n//   axios\r\n//     .delete(`/contacts/${contactId}`)\r\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\r\n//     .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const { data } = await axios.get('/contacts');\r\n    if (\r\n      data.map(item => item.name.toLowerCase()).includes(name.toLowerCase())\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\nclass ContactForm extends Component {\n  static propTypes = {\n    INITIAL_STATE: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    onSubmit: PropTypes.func,\n  };\n  state = { ...INITIAL_STATE };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"input name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"XXX-XX-XX\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.addContactBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsOperations.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport * as contactsAction from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsAction.filterContact(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactItem.module.scss';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li name={name} number={number} className={styles.contactItem}>\n    {name}:<span className={styles.phoneNumber}>{number}</span>\n    <button\n      type=\"button\"\n      className={styles.contactDeleteBtn}\n      onClick={() => onDelete(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","const getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\nexport default getVisibleContacts;\r\n","import styles from './ContactList.module.scss';\nimport ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getVisibleContacts from '../../helpers/getVisibleContacts';\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem key={id} id={id} name={name} number={number} />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { connect } from 'react-redux';\nimport contactsOprations from './redux/contacts/contacts-operations';\n\nimport './styles.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOprations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__blsyL\",\"label\":\"ContactForm_label__3d7tQ\",\"input\":\"ContactForm_input__29b0P\",\"addContactBtn\":\"ContactForm_addContactBtn__2F1n3\"};"],"sourceRoot":""}